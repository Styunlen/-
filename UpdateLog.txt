###
版本的标记格式为v(Num),例如1.0版本就标记为v1.0
而版本号的格式定义则采用了GNU 风格的版本号管理策略
	“
	GNU 风格版本号
	主版本号 . 子版本号 [. 修正版本号[ build- 编译版本号 ]]
	英文对照 : Major_Version_Number.Minor_Version_Number[.Revision_Number[.Build_Number]]
	示例1：1.2
	示例2：1.2.0
	示例3：1.2.0 build-1234
	1．项目初版本时，版本号可以为 0.1 或 0.1.0，也可以为 1.0 或 1.0.0，如果你为人很低调，我想你会选择那个主版本号为 0 的方式 ;
	2．当项目在进行了局部修改或 bug 修正时，主版本号和子版本号都不变，修正版本号加 1;
	3．当项目在原有的基础上增加了部分功能时，主版本号不变，子版本号加 1，修正版本号复位为 0，因而可以被忽略掉 ;
	4．当项目在进行了重大修改或局部修正累积较多，而导致项目整体发生全局变化时，主版本号加 1;
	5．另外，编译版本号一般是编译器在编译过程中自动生成的，我们只定义其格式，并不进行人为控制
	”.
版本以下的更新格式如下
--[添加]……
--[优化]……
--[修复]……(可以是修复问题，也可以是修复Bug,若修复的是Bug，则添加Bug序号前缀)
Bug的序号是依次递增的，1号Bug则被标记为“#1 Bug描述”
###

v1.2.0 build-:
[添加]启动时自动移动至上次关闭的位置
[修复]#1 若打开设置窗口后没有使用日历表更改时间，则关闭窗口保存设置时目标日期永远是1月6号的Bug